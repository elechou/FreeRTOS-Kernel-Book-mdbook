// Populate the sidebar
//
// This is a script, and not included directly in the page, to control the total size of the book.
// The TOC contains an entry for each page, so if each page includes a copy of the TOC,
// the total size of the page becomes O(n**2).
class MDBookSidebarScrollbox extends HTMLElement {
    constructor() {
        super();
    }
    connectedCallback() {
        this.innerHTML = '<ol class="chapter"><li class="chapter-item expanded affix "><a href="booktitle.html">Mastering the FreeRTOSâ„¢ Real Time Kernel</a></li><li class="chapter-item expanded affix "><a href="abbreviations.html">List of Abbreviations</a></li><li class="chapter-item expanded affix "><li class="part-title">Getting Started</li><li class="chapter-item expanded "><a href="ch01/index.html"><strong aria-hidden="true">1.</strong> Preface</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="ch01/1.1-multitasking-in-small-embedded-systems.html"><strong aria-hidden="true">1.1.</strong> Multitasking in Small Embedded Systems</a></li><li class="chapter-item expanded "><a href="ch01/1.2-included-source-files-and-projects.html"><strong aria-hidden="true">1.2.</strong> Included Source Files and Projects</a></li></ol></li><li class="chapter-item expanded "><a href="ch02/index.html"><strong aria-hidden="true">2.</strong> The FreeRTOS Kernel Distribution</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="ch02/2.1-introduction.html"><strong aria-hidden="true">2.1.</strong> Introduction</a></li><li class="chapter-item expanded "><a href="ch02/2.2-understanding-the-freertos-distribution.html"><strong aria-hidden="true">2.2.</strong> Understanding the FreeRTOS Distribution</a></li><li class="chapter-item expanded "><a href="ch02/2.3-demo-applications.html"><strong aria-hidden="true">2.3.</strong> Demo Applications</a></li><li class="chapter-item expanded "><a href="ch02/2.4-creating-a-freertos-project.html"><strong aria-hidden="true">2.4.</strong> Creating a FreeRTOS Project</a></li><li class="chapter-item expanded "><a href="ch02/2.5-data-types-and-coding-style-guide.html"><strong aria-hidden="true">2.5.</strong> Data Types and Coding Style Guide</a></li></ol></li><li class="chapter-item expanded "><li class="part-title">Core Kernel Concepts</li><li class="chapter-item expanded "><a href="ch03/index.html"><strong aria-hidden="true">3.</strong> Heap Memory Management</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="ch03/3.1-introduction.html"><strong aria-hidden="true">3.1.</strong> Introduction</a></li><li class="chapter-item expanded "><a href="ch03/3.2-example-memory-allocation-schemes.html"><strong aria-hidden="true">3.2.</strong> Example Memory Allocation Schemes</a></li><li class="chapter-item expanded "><a href="ch03/3.3-heap-related-utility-functions-and-macros.html"><strong aria-hidden="true">3.3.</strong> Heap Related Utility Functions and Macros</a></li><li class="chapter-item expanded "><a href="ch03/3.4-using-static-memory-allocation.html"><strong aria-hidden="true">3.4.</strong> Using Static Memory Allocation</a></li></ol></li><li class="chapter-item expanded "><a href="ch04/index.html"><strong aria-hidden="true">4.</strong> Task Management</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="ch04/4.1-introduction.html"><strong aria-hidden="true">4.1.</strong> Introduction</a></li><li class="chapter-item expanded "><a href="ch04/4.2-task-functions.html"><strong aria-hidden="true">4.2.</strong> Task Functions</a></li><li class="chapter-item expanded "><a href="ch04/4.3-top-level-task-states.html"><strong aria-hidden="true">4.3.</strong> Top Level Task States</a></li><li class="chapter-item expanded "><a href="ch04/4.4-task-creation.html"><strong aria-hidden="true">4.4.</strong> Task Creation</a></li><li class="chapter-item expanded "><a href="ch04/4.5-task-priorities.html"><strong aria-hidden="true">4.5.</strong> Task Priorities</a></li><li class="chapter-item expanded "><a href="ch04/4.6-time-measurement-and-the-tick-interrupt.html"><strong aria-hidden="true">4.6.</strong> Time Measurement and the Tick Interrupt</a></li><li class="chapter-item expanded "><a href="ch04/4.7-expanding-the-not-running-state.html"><strong aria-hidden="true">4.7.</strong> Expanding the Not Running State</a></li><li class="chapter-item expanded "><a href="ch04/4.8-the-idle-task-and-the-idle-task-hook.html"><strong aria-hidden="true">4.8.</strong> The Idle Task and the Idle Task Hook</a></li><li class="chapter-item expanded "><a href="ch04/4.9-changing-the-priority-of-a-task.html"><strong aria-hidden="true">4.9.</strong> Changing the Priority of a Task</a></li><li class="chapter-item expanded "><a href="ch04/4.10-deleting-a-task.html"><strong aria-hidden="true">4.10.</strong> Deleting a Task</a></li><li class="chapter-item expanded "><a href="ch04/4.11-thread-local-storage-and-reentrancy.html"><strong aria-hidden="true">4.11.</strong> Thread Local Storage and Reentrancy</a></li><li class="chapter-item expanded "><a href="ch04/4.12-scheduling-algorithms.html"><strong aria-hidden="true">4.12.</strong> Scheduling Algorithms</a></li></ol></li><li class="chapter-item expanded "><li class="part-title">Kernel Objects and Communication</li><li class="chapter-item expanded "><a href="ch05/index.html"><strong aria-hidden="true">5.</strong> Queue Management</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="ch05/5.1-introduction.html"><strong aria-hidden="true">5.1.</strong> Introduction</a></li><li class="chapter-item expanded "><a href="ch05/5.2-characteristics-of-a-queue.html"><strong aria-hidden="true">5.2.</strong> Characteristics of a Queue</a></li><li class="chapter-item expanded "><a href="ch05/5.3-using-a-queue.html"><strong aria-hidden="true">5.3.</strong> Using a Queue</a></li><li class="chapter-item expanded "><a href="ch05/5.4-receiving-data-from-multiple-sources.html"><strong aria-hidden="true">5.4.</strong> Receiving Data From Multiple Sources</a></li><li class="chapter-item expanded "><a href="ch05/5.5-working-with-large-or-variable-sized-data.html"><strong aria-hidden="true">5.5.</strong> Working with Large or Variable Sized Data</a></li><li class="chapter-item expanded "><a href="ch05/5.6-receiving-from-multiple-queues.html"><strong aria-hidden="true">5.6.</strong> Receiving From Multiple Queues</a></li><li class="chapter-item expanded "><a href="ch05/5.7-using-a-queue-to-create-a-mailbox.html"><strong aria-hidden="true">5.7.</strong> Using a Queue to Create a Mailbox</a></li></ol></li><li class="chapter-item expanded "><a href="ch06/index.html"><strong aria-hidden="true">6.</strong> Software Timer Management</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="ch06/6.1-chapter-introduction-and-scope.html"><strong aria-hidden="true">6.1.</strong> Chapter Introduction and Scope</a></li><li class="chapter-item expanded "><a href="ch06/6.2-software-timer-callback-functions.html"><strong aria-hidden="true">6.2.</strong> Software Timer Callback Functions</a></li><li class="chapter-item expanded "><a href="ch06/6.3-attributes-and-states-of-a-software-timer.html"><strong aria-hidden="true">6.3.</strong> Attributes and States of a Software Timer</a></li><li class="chapter-item expanded "><a href="ch06/6.4-the-context-of-a-software-timer.html"><strong aria-hidden="true">6.4.</strong> The Context of a Software Timer</a></li><li class="chapter-item expanded "><a href="ch06/6.5-creating-and-starting-a-software-timer.html"><strong aria-hidden="true">6.5.</strong> Creating and Starting a Software Timer</a></li><li class="chapter-item expanded "><a href="ch06/6.6-the-timer-id.html"><strong aria-hidden="true">6.6.</strong> The Timer ID</a></li><li class="chapter-item expanded "><a href="ch06/6.7-changing-the-period-of-a-timer.html"><strong aria-hidden="true">6.7.</strong> Changing the Period of a Timer</a></li><li class="chapter-item expanded "><a href="ch06/6.8-resetting-a-software-timer.html"><strong aria-hidden="true">6.8.</strong> Resetting a Software Timer</a></li></ol></li><li class="chapter-item expanded "><a href="ch07/index.html"><strong aria-hidden="true">7.</strong> Interrupt Management</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="ch07/7.1-introduction.html"><strong aria-hidden="true">7.1.</strong> Introduction</a></li><li class="chapter-item expanded "><a href="ch07/7.2-using-the-freertos-api-from-an-isr.html"><strong aria-hidden="true">7.2.</strong> Using the FreeRTOS API from an ISR</a></li><li class="chapter-item expanded "><a href="ch07/7.3-deferred-interrupt-processing.html"><strong aria-hidden="true">7.3.</strong> Deferred Interrupt Processing</a></li><li class="chapter-item expanded "><a href="ch07/7.4-binary-semaphores-used-for-synchronization.html"><strong aria-hidden="true">7.4.</strong> Binary Semaphores Used for Synchronization</a></li><li class="chapter-item expanded "><a href="ch07/7.5-counting-semaphores.html"><strong aria-hidden="true">7.5.</strong> Counting Semaphores</a></li><li class="chapter-item expanded "><a href="ch07/7.6-deferring-work-to-the-rtos-daemon-task.html"><strong aria-hidden="true">7.6.</strong> Deferring Work to the RTOS Daemon Task</a></li><li class="chapter-item expanded "><a href="ch07/7.7-using-queues-within-an-interrupt-service-routine.html"><strong aria-hidden="true">7.7.</strong> Using Queues within an Interrupt Service Routine</a></li><li class="chapter-item expanded "><a href="ch07/7.8-interrupt-nesting.html"><strong aria-hidden="true">7.8.</strong> Interrupt Nesting</a></li></ol></li><li class="chapter-item expanded "><a href="ch08/index.html"><strong aria-hidden="true">8.</strong> Resource Management</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="ch08/8.1-chapter-introduction-and-scope.html"><strong aria-hidden="true">8.1.</strong> Chapter Introduction and Scope</a></li><li class="chapter-item expanded "><a href="ch08/8.2-critical-sections-and-suspending-the-scheduler.html"><strong aria-hidden="true">8.2.</strong> Critical Sections and Suspending the Scheduler</a></li><li class="chapter-item expanded "><a href="ch08/8.3-mutexes-and-binary-semaphores.html"><strong aria-hidden="true">8.3.</strong> Mutexes (and Binary Semaphores)</a></li><li class="chapter-item expanded "><a href="ch08/8.4-gatekeeper-tasks.html"><strong aria-hidden="true">8.4.</strong> Gatekeeper Tasks</a></li></ol></li><li class="chapter-item expanded "><a href="ch09/index.html"><strong aria-hidden="true">9.</strong> Event Groups</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="ch09/9.1-chapter-introduction-and-scope.html"><strong aria-hidden="true">9.1.</strong> Chapter Introduction and Scope</a></li><li class="chapter-item expanded "><a href="ch09/9.2-characteristics-of-an-event-group.html"><strong aria-hidden="true">9.2.</strong> Characteristics of an Event Group</a></li><li class="chapter-item expanded "><a href="ch09/9.3-event-management-using-event-groups.html"><strong aria-hidden="true">9.3.</strong> Event Management Using Event Groups</a></li><li class="chapter-item expanded "><a href="ch09/9.4-task-synchronization-using-an-event-group.html"><strong aria-hidden="true">9.4.</strong> Task Synchronization Using an Event Group</a></li></ol></li><li class="chapter-item expanded "><a href="ch10/index.html"><strong aria-hidden="true">10.</strong> Task Notifications</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="ch10/10.1-introduction.html"><strong aria-hidden="true">10.1.</strong> Introduction</a></li><li class="chapter-item expanded "><a href="ch10/10.2-task-notifications-benefits-and-limitations.html"><strong aria-hidden="true">10.2.</strong> Task Notifications; Benefits and Limitations</a></li><li class="chapter-item expanded "><a href="ch10/10.3-using-task-notifications.html"><strong aria-hidden="true">10.3.</strong> Using Task Notifications</a></li></ol></li><li class="chapter-item expanded "><li class="part-title">Advanced Topics</li><li class="chapter-item expanded "><a href="ch11/index.html"><strong aria-hidden="true">11.</strong> Low Power Support</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="ch11/11.1-power-saving-introduction.html"><strong aria-hidden="true">11.1.</strong> Power Saving Introduction</a></li><li class="chapter-item expanded "><a href="ch11/11.2-freertos-sleep-modes.html"><strong aria-hidden="true">11.2.</strong> FreeRTOS Sleep Modes</a></li><li class="chapter-item expanded "><a href="ch11/11.3-functions-and-enabling-built-in-tickless-idle-functionality.html"><strong aria-hidden="true">11.3.</strong> Functions and Enabling Built-in Tickless Idle Functionality</a></li><li class="chapter-item expanded "><a href="ch11/11.4-implementing-portsuppressticksandsleep-macro.html"><strong aria-hidden="true">11.4.</strong> Implementing portSUPPRESS_TICKS_AND_SLEEP() Macro</a></li><li class="chapter-item expanded "><a href="ch11/11.5-idle-task-hook-function.html"><strong aria-hidden="true">11.5.</strong> Idle Task Hook Function</a></li></ol></li><li class="chapter-item expanded "><a href="ch12/index.html"><strong aria-hidden="true">12.</strong> Developer Support</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="ch12/12.1-introduction.html"><strong aria-hidden="true">12.1.</strong> Introduction</a></li><li class="chapter-item expanded "><a href="ch12/12.2-configassert.html"><strong aria-hidden="true">12.2.</strong> configASSERT()</a></li><li class="chapter-item expanded "><a href="ch12/12.3-tracealyzer-for-freertos.html"><strong aria-hidden="true">12.3.</strong> Tracealyzer for FreeRTOS</a></li><li class="chapter-item expanded "><a href="ch12/12.4-debug-related-hook-callback-functions.html"><strong aria-hidden="true">12.4.</strong> Debug Related Hook (Callback) Functions</a></li><li class="chapter-item expanded "><a href="ch12/12.5-viewing-run-time-and-task-state-information.html"><strong aria-hidden="true">12.5.</strong> Viewing Run-time and Task State Information</a></li><li class="chapter-item expanded "><a href="ch12/12.6-trace-hook-macros.html"><strong aria-hidden="true">12.6.</strong> Trace Hook Macros</a></li></ol></li><li class="chapter-item expanded "><a href="ch13/index.html"><strong aria-hidden="true">13.</strong> Troubleshooting</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="ch13/13.1-chapter-introduction-and-scope.html"><strong aria-hidden="true">13.1.</strong> Chapter Introduction and Scope</a></li><li class="chapter-item expanded "><a href="ch13/13.2-interrupt-priorities.html"><strong aria-hidden="true">13.2.</strong> Interrupt Priorities</a></li><li class="chapter-item expanded "><a href="ch13/13.3-stack-overflow.html"><strong aria-hidden="true">13.3.</strong> Stack Overflow</a></li><li class="chapter-item expanded "><a href="ch13/13.4-use-of-printf-and-sprintf.html"><strong aria-hidden="true">13.4.</strong> Use of printf() and sprintf()</a></li><li class="chapter-item expanded "><a href="ch13/13.5-other-common-sources-of-error.html"><strong aria-hidden="true">13.5.</strong> Other Common Sources of Error</a></li></ol></li></ol>';
        // Set the current, active page, and reveal it if it's hidden
        let current_page = document.location.href.toString().split("#")[0].split("?")[0];
        if (current_page.endsWith("/")) {
            current_page += "index.html";
        }
        var links = Array.prototype.slice.call(this.querySelectorAll("a"));
        var l = links.length;
        for (var i = 0; i < l; ++i) {
            var link = links[i];
            var href = link.getAttribute("href");
            if (href && !href.startsWith("#") && !/^(?:[a-z+]+:)?\/\//.test(href)) {
                link.href = path_to_root + href;
            }
            // The "index" page is supposed to alias the first chapter in the book.
            if (link.href === current_page || (i === 0 && path_to_root === "" && current_page.endsWith("/index.html"))) {
                link.classList.add("active");
                var parent = link.parentElement;
                if (parent && parent.classList.contains("chapter-item")) {
                    parent.classList.add("expanded");
                }
                while (parent) {
                    if (parent.tagName === "LI" && parent.previousElementSibling) {
                        if (parent.previousElementSibling.classList.contains("chapter-item")) {
                            parent.previousElementSibling.classList.add("expanded");
                        }
                    }
                    parent = parent.parentElement;
                }
            }
        }
        // Track and set sidebar scroll position
        this.addEventListener('click', function(e) {
            if (e.target.tagName === 'A') {
                sessionStorage.setItem('sidebar-scroll', this.scrollTop);
            }
        }, { passive: true });
        var sidebarScrollTop = sessionStorage.getItem('sidebar-scroll');
        sessionStorage.removeItem('sidebar-scroll');
        if (sidebarScrollTop) {
            // preserve sidebar scroll position when navigating via links within sidebar
            this.scrollTop = sidebarScrollTop;
        } else {
            // scroll sidebar to current active section when navigating via "next/previous chapter" buttons
            var activeSection = document.querySelector('#sidebar .active');
            if (activeSection) {
                activeSection.scrollIntoView({ block: 'center' });
            }
        }
        // Toggle buttons
        var sidebarAnchorToggles = document.querySelectorAll('#sidebar a.toggle');
        function toggleSection(ev) {
            ev.currentTarget.parentElement.classList.toggle('expanded');
        }
        Array.from(sidebarAnchorToggles).forEach(function (el) {
            el.addEventListener('click', toggleSection);
        });
    }
}
window.customElements.define("mdbook-sidebar-scrollbox", MDBookSidebarScrollbox);
